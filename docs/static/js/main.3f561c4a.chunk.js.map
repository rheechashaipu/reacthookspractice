{"version":3,"sources":["Components/ServerTable.js","Components/OverDue.js","Components/AddServer.js","data.js","useServersState.js","App.js","index.js"],"names":["ServerTable","props","servers","deleteServer","setupServer","actionOptions","key","value","text","handleActionSelect","e","data","id","_","isEmpty","Table","celled","Header","Row","map","index","HeaderCell","Body","server","Popup","content","description","trigger","Cell","hostname","ip","moment","deadline","format","setup","collapsing","Select","onChange","placeholder","options","OverDue","className","as","filter","diff","List","relaxed","items","AddServer","addNewServer","useState","open","setOpen","useForm","register","handleSubmit","errors","Modal","onClose","onOpen","Button","Content","Form","onSubmit","Field","name","ref","required","maxLength","pattern","validate","isValid","type","initialValue","setServers","updatedServerList","length","s","removeServer","App","useServersState","Grid","divided","columns","stackable","Column","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f561c4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Popup, Table, Select } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nconst ServerTable = (props) => {\r\n\r\n    const {servers, deleteServer, setupServer} = props; \r\n\r\n    const tableheaders = [\"Hostname\", \"IP\", \"Deadline\", \"Status\"];\r\n    const actionOptions = [\r\n        {\r\n            key: 1,\r\n            value: 'Remove',\r\n            text: 'Remove'\r\n        },\r\n        {\r\n            key: 2,\r\n            value: 'Complete',\r\n            text: 'Complete'\r\n        }\r\n    ]\r\n\r\n    const handleActionSelect = (e, data) => {\r\n        if (data.value === 'Remove'){\r\n            deleteServer(data.id);\r\n        } else if (data.value === 'Complete') {\r\n            setupServer(data.id)\r\n        }\r\n    }\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Server Tracker</h1>\r\n            {!_.isEmpty(servers) ? <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        {tableheaders.map((text, index) => <Table.HeaderCell key={index}>{text}</Table.HeaderCell>)}\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {servers.map((server) => (\r\n                        <Table.Row key={server.id}>\r\n                            <Popup content={server.description} trigger={<Table.Cell>{server.hostname}</Table.Cell>}/>\r\n                            <Table.Cell>{server.ip}</Table.Cell>\r\n                            <Table.Cell>{moment(server.deadline).format('l')}</Table.Cell>\r\n                            <Table.Cell>{server.setup ? \"Completed\" : \"Pending\"}</Table.Cell>\r\n                            <Table.Cell collapsing>\r\n                                <Select servers={servers} id={server.id} onChange={handleActionSelect} placeholder='Select action' options={actionOptions}/>\r\n                            </Table.Cell>\r\n                        </Table.Row>)\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n            </Table> : <p>No servers available to view.</p>}\r\n        </div>);\r\n}\r\n\r\nexport default ServerTable;","import React from 'react'\r\nimport {List, Header} from 'semantic-ui-react'\r\nimport moment from 'moment'\r\n\r\nconst OverDue = (props) => {\r\n    \r\n\r\n    return(\r\n        <div className=\"Overdue-Servers\">\r\n            <Header as=\"h2\">Overdue Servers</Header>\r\n            {props.servers.filter(server => (moment().diff(moment(server.deadline).format('l'), 'days') > 0) && server.setup === false).map((server) => <List className=\"List-Background\" key={server.id} relaxed items={[server.hostname, server.ip, `${moment().diff(moment(server.deadline).format('l'), 'days')} days`]}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OverDue;","import React, {useState} from 'react'\r\nimport {Button, Modal, Form } from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nconst AddServer = (props) => {\r\n\r\n    const {addNewServer} = props;\r\n    const [open, setOpen] = useState(false);\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        addNewServer(data)\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button>Add server</Button>}\r\n        >\r\n            <Modal.Header>Add Server</Modal.Header>\r\n            <Modal.Content>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Field>\r\n                        <label>Hostname</label>\r\n                        <input name=\"hostname\" placeholder=\"Please enter a hostname.\" ref={register({ \r\n                            required: true, maxLength: 280 })}/>\r\n                        {errors.hostname && <p className={'errorMessage'}>⚠ Enter a hostname, max 280 characters.</p>}\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>IP</label>\r\n                        <input name=\"ip\" placeholder=\"Please enter a valid ipv4 address.\" ref={register({\r\n                            required: true,\r\n                            pattern: /^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/\r\n                        })} />\r\n                        {errors.ip && <p className={'errorMessage'}>⚠ Please enter a valid ipv4 address.</p>}\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Deadline</label>\r\n                        <input name=\"deadline\" \r\n                        placeholder={\"Please enter a valid date in MM/DD/YYYY format\"} \r\n                        ref={register({\r\n                            validate: value => moment(value, 'MM/DD/YYYY', true).isValid()\r\n                        })} />\r\n                        {errors.deadline && <p className={'errorMessage'} >⚠ Please enter a valid date in MM/DD/YYYY format.</p>}\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Description</label>\r\n                        <input name=\"description\" placeholder=\"Please enter a description.\" ref={register({\r\n                            required: true, maxLength: 280 \r\n                        })} />\r\n                        {errors.description && <p className={'errorMessage'}>⚠ Enter a description, max 280 characters.</p>}\r\n\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Button type='submit' className='Add-Server' >Add Server</Button>\r\n                    </Form.Field>\r\n\r\n                </Form>\r\n            </Modal.Content>\r\n\r\n        </Modal>\r\n    )\r\n}\r\nexport default AddServer;\r\n","/*\r\n    The incomplete skeleton of a mock API.\r\n    Modify, extend or ignore this file to meet your needs.\r\n*/\r\n\r\nvar data = [\r\n    {\r\n        \"id\":101,\r\n        \"hostname\":\"core\",\r\n        \"description\":\"The central devices we rely on and scan regularly.\",\r\n        \"ip\": \"1.2.3.4\",\r\n        \"deadline\": \"2020-04-23T18:30:00.000Z\",\r\n        \"setup\": false\r\n    },\r\n    {\r\n        \"id\":102,\r\n        \"hostname\":\"backup\",\r\n        \"description\":\"Lorem ipsum backup.\",\r\n        \"ip\": \"255.255.255.255\",\r\n        \"deadline\": \"2018-07-23T18:30:00.000Z\",\r\n        \"setup\": false\r\n    },\r\n    {\r\n        \"id\":103,\r\n        \"hostname\":\"external\",\r\n        \"description\":\"Lorem ipsum external.\",\r\n        \"ip\": \"1.0.0.0\",\r\n        \"deadline\": \"2021-07-23T12:30:00.000Z\",\r\n        \"setup\": false\r\n    }\r\n];\r\n\r\nfunction getServers() {\r\n    return data;\r\n}\r\n\r\nfunction addServer(server){\r\n    server.id = data[data.length-1].id + 1;  // Naive unique ID\r\n    server.setup = false;\r\n    data = [...data, server];\r\n    return data;\r\n}\r\n\r\nfunction removeServer(id){\r\n    data = data.filter( s => s.id !== id);\r\n    return data;\r\n}\r\n\r\nfunction setupServer(id){\r\n    data.filter(s => s.id === id)[0].setup = true;\r\n    return data;\r\n}\r\n\r\nexport {\r\n    getServers,\r\n    removeServer,\r\n    addServer,\r\n    setupServer\r\n}","import {useState} from 'react';\r\nimport {removeServer, setupServer, addServer} from './data.js';\r\n\r\nexport default (initialValue) => {\r\n    const [servers, setServers] = useState(initialValue);\r\n\r\n    return {\r\n        servers,\r\n        addNewServer: (data) => {\r\n            const updatedServerList = addServer(data)\r\n            setServers(updatedServerList);\r\n        },\r\n        deleteServer: (id) => {\r\n            const updatedServerList = removeServer(id);\r\n            setServers(updatedServerList);\r\n        },\r\n        setupServer: (id) => {\r\n            const updatedServerList = [...setupServer(id)]\r\n            setServers(updatedServerList);\r\n        }\r\n    }\r\n}","import './App.css';\r\nimport {Grid, Segment} from 'semantic-ui-react';\r\nimport ServerTable from './Components/ServerTable.js';\r\nimport OverDue from './Components/OverDue.js';\r\nimport AddServer from './Components/AddServer.js'\r\nimport useServersState from './useServersState.js'\r\nimport {getServers} from './data';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const initialServerList = getServers();\r\n  const {servers, addNewServer, deleteServer, setupServer} = useServersState(initialServerList)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Grid divided columns={2} stackable>\r\n            <Grid.Column width={12}>\r\n              <div className='First-Column'>\r\n                <AddServer  addNewServer={addNewServer} />\r\n                <ServerTable servers={servers} deleteServer={deleteServer} setupServer={setupServer} />\r\n              </div>\r\n \r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n            <OverDue servers={servers} />\r\n\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n\r\n      {/* <AddServer  addNewServer={addNewServer} />\r\n      <ServerTable servers={servers} deleteServer={deleteServer} setupServer={setupServer} /> */}\r\n      {/* <OverDue servers={servers} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}